{"ast":null,"code":"var _jsxFileName = \"/Users/reachgopi/Documents/react_workspace/React_Extensive_Course/react-advanced/src/tutorial/1-useState/2-usestate-basic.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\"; //useState returns a handler to change in future\n//Few conditions using hooks\n// Hooks i.e... useState cannot be used inside a condition\n// Hooks can be used with capital Function name like StateBasicExample not on stateBasicExample\n// (React component names must start with an uppercase letter.)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateBasicExample = () => {\n  _s();\n\n  let [title, setTitle] = useState(\"React Advanced Example\");\n\n  const handleClick = () => {\n    if (title === \"React Advanced Example\") {\n      setTitle(\"Hello React Programmers\");\n    } else {\n      setTitle(\"React Advanced Example\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleClick,\n      children: \"Change Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StateBasicExample, \"PuNe9bm2+17tHn4GPSe96FYzprU=\");\n\n_c = StateBasicExample;\nexport default stateBasicExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateBasicExample\");","map":{"version":3,"sources":["/Users/reachgopi/Documents/react_workspace/React_Extensive_Course/react-advanced/src/tutorial/1-useState/2-usestate-basic.js"],"names":["React","useState","StateBasicExample","title","setTitle","handleClick","stateBasicExample"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,wBAAD,CAAhC;;AACA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,wBAAd,EAAwC;AACtCC,MAAAA,QAAQ,CAAC,yBAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,wBAAD,CAAR;AACD;AACF,GAND;;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEE,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBD;;GAAMH,iB;;KAAAA,iB;AAmBN,eAAeI,iBAAf","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\n//useState returns a handler to change in future\n//Few conditions using hooks\n// Hooks i.e... useState cannot be used inside a condition\n// Hooks can be used with capital Function name like StateBasicExample not on stateBasicExample\n// (React component names must start with an uppercase letter.)\nconst StateBasicExample = () => {\n  let [title, setTitle] = useState(\"React Advanced Example\");\n  const handleClick = () => {\n    if (title === \"React Advanced Example\") {\n      setTitle(\"Hello React Programmers\");\n    } else {\n      setTitle(\"React Advanced Example\");\n    }\n  };\n  return (\n    <React.Fragment>\n      <h2>{title}</h2>\n      <button type=\"button\" onClick={handleClick}>\n        Change Title\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default stateBasicExample;\n"]},"metadata":{},"sourceType":"module"}