{"ast":null,"code":"var _jsxFileName = \"/Users/reachgopi/Documents/react_workspace/React_Extensive_Course/react-advanced/src/tutorial/4-forms/2-multiple-inputs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; //Refactored Controlled inputs code here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MultipleInput = () => {\n  _s();\n\n  const [person, setPerson] = useState({\n    firstName: \"\",\n    age: \"\",\n    email: \"\"\n  });\n  const [people, setPeople] = useState([]);\n\n  const handleOnChange = e => {\n    setPerson({ ...person,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (person.firstName && person.age && person.email) {\n      setPeople([...people, person]);\n      setPerson({\n        firstName: \"\",\n        age: \"\",\n        email: \"\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"FirstName:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"firstName\",\n            value: person.firstName,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            value: person.email,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"age\",\n            children: \"Age:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"age\",\n            value: person.age,\n            onChange: handleOnChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onSubmit: handleSubmit,\n          children: \"Add Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), people.map(person => {\n        const {\n          id,\n          firstName,\n          email\n        } = person;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(MultipleInput, \"KonNbOgjRr8uSe772Dl7QUHGGs8=\");\n\n_c = MultipleInput;\nexport default ControlledInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleInput\");","map":{"version":3,"sources":["/Users/reachgopi/Documents/react_workspace/React_Extensive_Course/react-advanced/src/tutorial/4-forms/2-multiple-inputs.js"],"names":["React","useState","MultipleInput","person","setPerson","firstName","age","email","people","setPeople","handleOnChange","e","target","name","value","handleSubmit","preventDefault","map","id","ControlledInput"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n//Refactored Controlled inputs code here\nconst MultipleInput = () => {\n  const [person, setPerson] = useState({ firstName: \"\", age: \"\", email: \"\" });\n  const [people, setPeople] = useState([]);\n  const handleOnChange = (e) => {\n    setPerson({ ...person, [e.target.name]: e.target.value });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (person.firstName && person.age && person.email) {\n      setPeople([...people, person]);\n      setPerson({ firstName: \"\", age: \"\", email: \"\" });\n    }\n  };\n  return (\n    <>\n      <div>\n        <form className=\"form\">\n          <div className=\"form-control\">\n            <label htmlFor=\"firstName\">FirstName:</label>\n            <input\n              type=\"text\"\n              id=\"firstName\"\n              value={person.firstName}\n              onChange={handleOnChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"email\">Email:</label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              value={person.email}\n              onChange={handleOnChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"age\">Age:</label>\n            <input\n              type=\"text\"\n              id=\"age\"\n              value={person.age}\n              onChange={handleOnChange}\n            />\n          </div>\n          <button type=\"submit\" onSubmit={handleSubmit}>\n            Add Person\n          </button>\n        </form>\n        {people.map((person) => {\n          const { id, firstName, email } = person;\n          return (\n            <div className=\"item\" key={id}>\n              <h4>{firstName}</h4>\n              <p>{email}</p>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default ControlledInput;\n"]},"metadata":{},"sourceType":"module"}