{"ast":null,"code":"var _jsxFileName = \"/Users/reachgopi/Documents/react_workspace/React_Extensive_Course/react-advanced/src/tutorial/2-useEffect/3-useeffect-fetch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UseEffectFetch = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n\n  const fetchGithubUsers = async () => {\n    try {\n      let response = await fetch(\"https://api.github.com/users\");\n      let json = await response.json();\n      return json;\n    } catch (err) {\n      return err;\n    }\n  };\n\n  useEffect(async () => {\n    console.log(\"in useeffect\");\n    setUsers(await fetchGithubUsers());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Github Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), users.map(user => {\n      let {\n        login,\n        html_url,\n        avatar_url,\n        id\n      } = user;\n\n      /*#__PURE__*/\n      _jsxDEV(\"ul\", {\n        className: \"users\",\n        children: [\"return (\", /*#__PURE__*/_jsxDEV(\"li\", {\n          children: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: html_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), \");\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(UseEffectFetch, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n\n_c = UseEffectFetch;\nexport default UseEffectFetch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseEffectFetch\");","map":{"version":3,"sources":["/Users/reachgopi/Documents/react_workspace/React_Extensive_Course/react-advanced/src/tutorial/2-useEffect/3-useeffect-fetch.js"],"names":["React","useState","useEffect","UseEffectFetch","users","setUsers","fetchGithubUsers","response","fetch","json","err","console","log","map","user","login","html_url","avatar_url","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,gBAAgB,GAAG,YAAY;AACnC,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA1B;AACA,UAAIC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAjB;AACA,aAAOA,IAAP;AACD,KAJD,CAIE,OAAOC,GAAP,EAAY;AACZ,aAAOA,GAAP;AACD;AACF,GARD;;AASAR,EAAAA,SAAS,CAAC,YAAY;AACpBS,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAP,IAAAA,QAAQ,CAAC,MAAMC,gBAAgB,EAAvB,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AACnB,UAAI;AAAEC,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA,UAAnB;AAA+BC,QAAAA;AAA/B,UAAsCJ,IAA1C;;AACA;AAAA;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA,4CACU;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBADV,eAEE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,GAAG,EAAEC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,KARA,CAFH;AAAA,kBADF;AAcD,CA/BD;;GAAMd,c;;KAAAA,c;AAiCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst UseEffectFetch = () => {\n  const [users, setUsers] = useState([]);\n\n  const fetchGithubUsers = async () => {\n    try {\n      let response = await fetch(\"https://api.github.com/users\");\n      let json = await response.json();\n      return json;\n    } catch (err) {\n      return err;\n    }\n  };\n  useEffect(async () => {\n    console.log(\"in useeffect\");\n    setUsers(await fetchGithubUsers());\n  }, []);\n\n  return (\n    <>\n      <h3>Github Users</h3>\n      {users.map((user) => {\n        let { login, html_url, avatar_url, id } = user;\n        <ul className=\"users\">\n          return (<li>{login}</li>\n          <li>{html_url}</li>\n          <img src={avatar_url} />\n          );\n        </ul>;\n      })}\n    </>\n  );\n};\n\nexport default UseEffectFetch;\n"]},"metadata":{},"sourceType":"module"}